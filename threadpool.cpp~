#include "threadpool.h"

   //构造函数
ThreadPool::ThreadPool(size_t num)
{
	m_num = num;
}

ThreadPool::~ThreadPool()
{
	
	
}

void * ThreadPool::work(void *p)
{
	ThreadPool* pool = (ThreadPool*)p;
	int socketid = pool->m_socketList.pop();
	cout << pool->m_num;
	cout << "Hello World!\n";	
}//线程函数
void ThreadPool::start()//启动所有线程
{
	cout << "start\n";
	for(size_t i=0; i<m_num; i++)
	{
		pthread_create(&pth_id,NULL,work,(void*)this);
		m_pthreadList.push(pth_id);
		pthread_join(&pth_id,NULL);
	}
}

void ThreadPool::setWork(int socketid)
{
	m_socketList.push(socketid);
}



